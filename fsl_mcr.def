Bootstrap: localimage
From: ants.sif

%labels
    Stage "FSL (NeuroDebian minimal/core) on top of ants.sif"

%environment
    export SAMBA_APPS_DIR="${SAMBA_APPS_DIR:-/opt/samba}"
    # Keep ANTSPATH consistent
    export ANTSPATH="${ANTSPATH:-${SAMBA_APPS_DIR}/ants/bin}"
    export PATH="${ANTSPATH}:$PATH"

    # FSL defaults to living under SAMBA_APPS_DIR via symlink we create in %post
    export FSLDIR="${FSLDIR:-${SAMBA_APPS_DIR}/fsl}"
    export FSLOUTPUTTYPE="${FSLOUTPUTTYPE:-NIFTI_GZ}"
    export PATH="${FSLDIR}/bin:$PATH"

%post
    set -eu
    SAMBA_APPS_DIR="${SAMBA_APPS_DIR:-/opt/samba}"

    if command -v apt-get >/dev/null 2>&1; then
      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y --no-install-recommends ca-certificates curl gnupg
      # Add NeuroDebian list for Ubuntu 22.04 (jammy); change region if you prefer
      curl -fsSL https://neuro.debian.net/lists/jammy.us-nh.full \
        -o /etc/apt/sources.list.d/neurodebian.sources.list
      apt-get update
      apt-get install -y --no-install-recommends neurodebian-keyring
      apt-get update
      # Minimal FSL bits (core tools & templates)
      apt-get install -y --no-install-recommends fsl-core fsl-mni152-templates
      apt-get clean; rm -rf /var/lib/apt/lists/*
    else
      echo "ERROR: apt-get not found; FSL install method expects Debian/Ubuntu base." >&2
      exit 1
    fi

    # Detect FSL dir installed by packages
    REAL_FSLDIR=""
    for p in /usr/share/fsl/6.* /usr/lib/fsl/6.*; do
      if [ -d "$p" ]; then REAL_FSLDIR="$p"; break; fi
    done
    if [ -z "$REAL_FSLDIR" ]; then
      echo "ERROR: Could not locate FSL install dir after apt install." >&2
      exit 1
    fi

    # Make SAMBA_APPS_DIR/fsl point to the real FSL dir so FSLDIR can default there
    mkdir -p "${SAMBA_APPS_DIR}"
    ln -sfn "$REAL_FSLDIR" "${SAMBA_APPS_DIR}/fsl"

    # Provide wrapper env for non-login shells at runtime
    echo "export FSLDIR=${SAMBA_APPS_DIR}/fsl" > /etc/profile.d/99-fsl-samba.sh
    echo 'export FSLOUTPUTTYPE=${FSLOUTPUTTYPE:-NIFTI_GZ}' >> /etc/profile.d/99-fsl-samba.sh
    echo 'export PATH="${FSLDIR}/bin:$PATH"' >> /etc/profile.d/99-fsl-samba.sh
    
    # --- MATLAB Runtime R2015b (MCR) + Java 8 ---
	# Consistent locations
	BUILD_ROOT=/opt/build
	ME_DIR=${BUILD_ROOT}/matlab_execs
	CACHE_DIR=${BUILD_ROOT}/matlab_cache
	MATLAB_2015b_PATH=/opt/MATLAB/MATLAB2015b_runtime/v90
	INSTALLER_NAME=MCR_R2015b_glnxa64_installer.zip
	INSTALLER_PATH=${ME_DIR}/${INSTALLER_NAME}
	TEMP_DIR=${ME_DIR}/temp
	
	# Prepare directories (do NOT mkdir the installer *file* path)
	mkdir -p "$MATLAB_2015b_PATH" "$ME_DIR" "$TEMP_DIR" "$CACHE_DIR"
	
	# If a stale directory exists where the file should go, remove it
	if [ -d "$INSTALLER_PATH" ]; then
	  rm -rf "$INSTALLER_PATH"
	fi
	
	# Prefer cached copy; else download to a *file* with -O
	if [ -f "${CACHE_DIR}/${INSTALLER_NAME}" ]; then
	  cp -f "${CACHE_DIR}/${INSTALLER_NAME}" "${INSTALLER_PATH}"
	else
	  wget -O "${INSTALLER_PATH}" \
		"http://ssd.mathworks.com/supportfiles/downloads/R2015b/deployment_files/R2015b/installers/glnxa64/${INSTALLER_NAME}"
	  cp -f "${INSTALLER_PATH}" "${CACHE_DIR}/" || true
	fi
	
	# Unpack and install non-interactively
	unzip -d "${TEMP_DIR}" "${INSTALLER_PATH}"
	"${TEMP_DIR}/install" -mode silent -agreeToLicense yes -destinationFolder "${MATLAB_2015b_PATH}"
	rm -rf "${TEMP_DIR}"
	
	# Verify key libs in either runtime/ or bin/ tree (MathWorks moved things across updates)
	if ! ls "${MATLAB_2015b_PATH}"/runtime/glnxa64/libmwmclmcrrt.so* >/dev/null 2>&1 && \
	   ! ls "${MATLAB_2015b_PATH}"/bin/glnxa64/libmwmclmcrrt.so*     >/dev/null 2>&1 ; then
	  echo "FATAL: MCR libmwmclmcrrt.so* missing under ${MATLAB_2015b_PATH}" >&2
	  exit 1
	fi
	
	# Java 8 for MATLAB2015b compatibility
	apt-get update && apt-get install -y --no-install-recommends openjdk-8-jre-headless
	mkdir -p /opt/samba/java
	cp -a /usr/lib/jvm/java-8-openjdk-amd64/jre /opt/samba/java
	
	# Make MCR discoverable by the dynamic linker (do this LATE so native builds don’t pick up MCR’s libstdc++)
	cat >/etc/ld.so.conf.d/mcr_v90.conf <<EOF
	/opt/MATLAB/MATLAB2015b_runtime/v90/runtime/glnxa64
	/opt/MATLAB/MATLAB2015b_runtime/v90/bin/glnxa64
	/opt/MATLAB/MATLAB2015b_runtime/v90/sys/os/glnxa64
	EOF
	ldconfig
	
	# Read/execute perms for non-root users
	chmod -R a+rX /opt/MATLAB "$ME_DIR"

    # --- Perlbrew + Perl 5.16.3 + cpanm + Carton (no project install here) ---
	SAMBA_APPS_DIR="${SAMBA_APPS_DIR:-/opt/samba}"
	PERLBREW_ROOT="${SAMBA_APPS_DIR}/perl5"
	
	curl -L https://install.perlbrew.pl | bash
	"${PERLBREW_ROOT}/bin/perlbrew" install -n perl-5.16.3
	"${PERLBREW_ROOT}/bin/perlbrew" install-cpanm
	"${PERLBREW_ROOT}/bin/perlbrew" exec --with perl-5.16.3 cpanm -n Carton
	
	cat >/etc/profile.d/perlbrew.sh <<'EOF'
	export PERLBREW_ROOT=/opt/samba/perl5
	if [ -r "$PERLBREW_ROOT/etc/bashrc" ]; then
	  . "$PERLBREW_ROOT/etc/bashrc"
	fi
	EOF
	chmod 644 /etc/profile.d/perlbrew.sh


%test
    set -eu
    FSLDIR="${FSLDIR:-${SAMBA_APPS_DIR:-/opt/samba}/fsl}"
    [ -x "${FSLDIR}/bin/fslmaths" ]
    "${FSLDIR}/bin/fslmaths" -version >/dev/null 2>&1 || true
    echo "FSL present at ${FSLDIR}"

%runscript
    exec /bin/sh -c "$@"
