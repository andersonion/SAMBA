#!/usr/local/pipeline-link/perl
# vbm_pipeline.pl
# created 2014/11/17 BJ Anderson CIVM
#
# Roughly modeled after seg_pipe_mc structure. (For better or for worse.)
#
#
#
#
#
#
#
#


# All my includes and requires are belong to us.
# use ...

my $PM = 'vbm_pipeline.pl'; 

use strict;
use warnings;
use Cwd qw(abs_path);
use File::Basename;
use vars qw($Hf);
use Env qw(ANTSPATH PATH BIGGUS_DISKUS);
$ENV{'PATH'}=$ANTSPATH.':'.$PATH;

use lib dirname(abs_path($0));
use Env qw(RADISH_PERL_LIB);
if (! defined($RADISH_PERL_LIB)) {
    print STDERR "Cannot find good perl directories, quitting\n";
    exit;
}
use lib split(':',$RADISH_PERL_LIB);

# require ...
require Headfile;
require retrieve_archived_data;
#require create_labels;  #when will I need this?

#require register_to_atlas_vbm;

# Temporary hardcoded variables

my $project_name = "13.colton.01";
my @control_group = qw(N51136 N51201 N51234);
my @compare_group = qw(N51193 N51211 N51221); 
my $optional_suffix = '';
my $atlas_name = 'whs';
my $rigid_contrast = 'dwi';
my $mdt_contrast = 'fa';
my $atlas_dir = "/home/rja20/cluster_code/atlas/whs";

if ($optional_suffix ne '') {
    $optional_suffix = "_${optional_suffix}";
}

my @project_components = split('.',$project_name);
my $project_id =  join('_',@project_components);
print STDOUT "Project id before: $project_id\n";
$project_id = "VBM_".$project_id.'_'.$atlas_name.$optional_suffix; #create_identifer($project_name);

print STDOUT "Project id _after: $project_id\n";
my ($input_dir,$work_dir,$result_dir,$result_headfile) = make_process_dirs($project_id); #new_get_engine_dependencies($project_id);
my $Hf = new Headfile ('rw',$result_headfile );


my $control_comma_list = join(',',@control_group);
my $compare_comma_list = join(',',@compare_group);
my $complete_comma_list = $control_comma_list.','.$compare_comma_list;

$Hf->set_value('control_comma_list',$control_comma_list);
$Hf->set_value('compare_comma_list',$compare_comma_list);
$Hf->set_value('complete_comma_list',$complete_comma_list);
$Hf->set_value('atlas_name',$atlas_name);
$Hf->set_value('rigid_contrast',$rigid_contrast);
$Hf->set_value('mdt_contrast',$mdt_contrast);
$Hf->set_value('rigid_atlas_dir',$atlas_dir);
#maincode
{
    print STDOUT " Running the main code of $PM. \n";
# Set up needed variables


# Set up headfile
#HfResult='';

# Parse command line


# Check command line options and report related errors


# Finish headfile


# Begin work:
# Gather all needed data and put in inputs directory

# Convert file names if need be?

# Register all to atlas
   # register_to_atlas_vbm_Compile_check();
   # register_to_atlas_vbm();


 
} #end main

sub sub1 {
}
