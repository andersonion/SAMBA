Bootstrap: localimage
From: itk.sif

%environment
    export SAMBA_APPS_DIR="${SAMBA_APPS_DIR:-/opt/samba}"
    export ANTSPATH="${ANTSPATH:-${SAMBA_APPS_DIR}/ants/bin}"
    export PATH="${ANTSPATH}:$PATH"
    export ITK_DIR="${ITK_DIR:-/opt/itk/lib/cmake/ITK-5.3}"
    export SRC_ROOT="${SRC_ROOT:-/opt/src}"
    # ðŸ”’ hard default to the commit we agreed: 0ea8e53
    export ANTS_REF="${ANTS_REF:-0ea8e53}"
    export ANTS_TARGETS="${ANTS_TARGETS:-antsRegistration antsApplyTransforms N4BiasFieldCorrection Atropos ImageMath ResampleImageBySpacing ResampleImage SmoothImage MultiplyImages ThresholdImage}"

%post
    set -eu

    # -- Paths/inputs --
    ITK_DIR=/opt/itk/lib/cmake/ITK-5.3
    INSTALL_PREFIX=/opt/samba/ants
    SRC=/opt/src/ANTs
    BUILD=${SRC}/build
    LOG=/tmp/ants_cmake.log

    mkdir -p /opt/src
    if [ ! -d "$SRC" ]; then
      git clone https://github.com/ANTsX/ANTs.git "$SRC"
    fi
    cd "$SRC"
    git fetch --all -q || true
    git checkout 0ea8e53

    # Fresh build directory
    rm -rf "$BUILD"
    mkdir -p "$BUILD"
    cd "$BUILD"

    # ---- Configure (Option A: SuperBuild OFF) ----
    : > "$LOG"
    if ! cmake -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" \
        -DBUILD_TESTING=OFF \
        -DBUILD_EXAMPLES=ON \
        -DSuperBuild=OFF \
        -DITK_DIR="$ITK_DIR" \
        .. >>"$LOG" 2>&1 ; then
      echo "FATAL: CMake configure failed. Last 200 lines:" >&2
      tail -n 200 "$LOG" >&2
      # Print CMake diagnostic logs if present
      [ -f CMakeFiles/CMakeError.log ]  && { echo "--- CMakeError.log ---";  tail -n 200 CMakeFiles/CMakeError.log; }
      [ -f CMakeFiles/CMakeOutput.log ] && { echo "--- CMakeOutput.log ---"; tail -n 200 CMakeFiles/CMakeOutput.log; }
      exit 1
    fi

    # Ensure generator actually created build.ninja
    if [ ! -f build.ninja ]; then
      echo "FATAL: build.ninja was not generated (generator or configure issue)." >&2
      exit 1
    fi

    # ---- Build selected tools ----
    JOBS="$(nproc)"; [ "$JOBS" -gt 8 ] && JOBS=8
    TARGETS="
      antsRegistration
      antsApplyTransforms
      N4BiasFieldCorrection
      Atropos
      ImageMath
      ResampleImageBySpacing
      ResampleImage
      SmoothImage
      MultiplyImages
      ThresholdImage
      PrintHeader
      ConvertImage
      ConvertImagePixelType
      SetOrigin
      SetSpacing
      ConvertTransformFile
    "
    # compact TARGETS into a single line
    TARGETS="$(echo $TARGETS)"

    if ! ninja -j "$JOBS" $TARGETS ; then
      echo "FATAL: Ninja build failed. Dumping last 200 lines of build output is not available here." >&2
      exit 1
    fi

    # ---- Install (or copy binaries if no install rules) ----
    if ! cmake --install . ; then
      echo "Note: No install target; copying built binaries to ${INSTALL_PREFIX}/bin"
      mkdir -p "${INSTALL_PREFIX}/bin"
      # Find and copy executables we just built
      for t in $TARGETS ; do
        p="$(command -v "$t" 2>/dev/null || true)"
        if [ -n "$p" ] && [ -x "$p" ]; then
          cp -fv "$p" "${INSTALL_PREFIX}/bin/"
        else
          # search under build tree when command -v doesnâ€™t find it
          found="$(find . -type f -name "$t" -perm -111 -print -quit || true)"
          [ -n "$found" ] && cp -fv "$found" "${INSTALL_PREFIX}/bin/" || true
        fi
      done
    fi

    # ---- Final sanity check ----
    if [ ! -x "${INSTALL_PREFIX}/bin/antsRegistration" ]; then
      echo "FATAL: ANTs installation failed â€” ${INSTALL_PREFIX}/bin/antsRegistration not found." >&2
      exit 1
    fi
    chmod -R a+rX "${INSTALL_PREFIX}"


%test
    set -eu
    [ -x "${SAMBA_APPS_DIR:-/opt/samba}/ants/bin/antsRegistration" ]
    echo "ANTs core tools present."

%runscript
    exec /bin/sh -c "$@"
