Bootstrap: localimage
From: itk.sif

%environment
    export SAMBA_APPS_DIR="${SAMBA_APPS_DIR:-/opt/samba}"
    export ANTSPATH="${ANTSPATH:-${SAMBA_APPS_DIR}/ants/bin}"
    export PATH="${ANTSPATH}:$PATH"
    export ITK_DIR="${ITK_DIR:-/opt/itk/lib/cmake/ITK-5.3}"
    export SRC_ROOT="${SRC_ROOT:-/opt/src}"
    # ðŸ”’ hard default to the commit we agreed: 0ea8e53
    export ANTS_REF="${ANTS_REF:-0ea8e53}"
    export ANTS_TARGETS="${ANTS_TARGETS:-antsRegistration antsApplyTransforms N4BiasFieldCorrection Atropos ImageMath ResampleImageBySpacing ResampleImage SmoothImage MultiplyImages ThresholdImage}"

%post
    set -eu

    # -- Paths/inputs --
    ITK_DIR=/opt/itk/lib/cmake/ITK-5.3
    INSTALL_PREFIX=/opt/samba/ants
    SRC=/opt/src/ANTs
    BUILD=${SRC}/build
    LOG=/tmp/ants_cmake.log

    mkdir -p /opt/src
    if [ ! -d "$SRC" ]; then
      git clone https://github.com/ANTsX/ANTs.git "$SRC"
    fi
    cd "$SRC"
    git fetch --all -q || true
    git checkout 0ea8e53

    # Fresh build directory
    rm -rf "$BUILD"
    mkdir -p "$BUILD"
    cd "$BUILD"

    # ---- Configure (Option A: SuperBuild OFF) ----
    : > "$LOG"
    if ! cmake -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" \
        -DBUILD_TESTING=OFF \
        -DBUILD_EXAMPLES=ON \
        -DSuperBuild=OFF \
        -DITK_DIR="$ITK_DIR" \
        .. >>"$LOG" 2>&1 ; then
      echo "FATAL: CMake configure failed. Last 200 lines:" >&2
      tail -n 200 "$LOG" >&2
      # Print CMake diagnostic logs if present
      [ -f CMakeFiles/CMakeError.log ]  && { echo "--- CMakeError.log ---";  tail -n 200 CMakeFiles/CMakeError.log; }
      [ -f CMakeFiles/CMakeOutput.log ] && { echo "--- CMakeOutput.log ---"; tail -n 200 CMakeFiles/CMakeOutput.log; }
      exit 1
    fi

    # Ensure generator actually created build.ninja
    if [ ! -f build.ninja ]; then
      echo "FATAL: build.ninja was not generated (generator or configure issue)." >&2
      exit 1
    fi

    # ---- Build selected tools ----
	# ---- Robust, simple build + manual copy of required CLIs ----
	JOBS=1                                           # low RAM so it completes predictably
	BUILD_LOG=/tmp/ants_build.log; : > "$BUILD_LOG"
	INSTALL_PREFIX="${SAMBA_APPS_DIR}/ants"          # where we want the tools to live
	ANTSBIN="${INSTALL_PREFIX}/bin"
	mkdir -p "${ANTSBIN}"
	
	echo "Building full ANTs tree (-j ${JOBS})â€¦"
	if ! cmake --build . -- -j "${JOBS}" >"$BUILD_LOG" 2>&1; then
	  echo "ANTs build failed. Last 200 lines:" >&2
	  tail -n 200 "$BUILD_LOG" >&2
	  exit 1
	fi
	
	# Tools we actually need
	WANTED="
	  antsRegistration
	  antsApplyTransforms
	  N4BiasFieldCorrection
	  Atropos
	  ImageMath
	  ResampleImageBySpacing
	  ResampleImage
	  SmoothImage
	  MultiplyImages
	  ThresholdImage
	  PrintHeader
	  ConvertImage
	  ConvertImagePixelType
	  SetOrigin
	  SetSpacing
	  ConvertTransformFile
	"
	
	# Copy built executables directly from the build tree (Examples/) into ANTSPATH
	COPIED=0
	for t in $WANTED; do
	  # common path in ANTs builds
	  if [ -f "Examples/$t" ]; then
		cp -fv "Examples/$t" "${ANTSBIN}/"
		chmod a+rx "${ANTSBIN}/$t" || true
		COPIED=$((COPIED+1))
		continue
	  fi
	
	  # fallback: ask ninja for the output file of either <t> or l_<t>
	  out="$(ninja -t query "$t" 2>/dev/null | awk '/^  outputs:/{print $2; exit}')"
	  [ -z "$out" ] && out="$(ninja -t query "l_$t" 2>/dev/null | awk '/^  outputs:/{print $2; exit}')"
	  if [ -n "$out" ] && [ -f "$out" ]; then
		cp -fv "$out" "${ANTSBIN}/"
		b="$(basename "$out")"
		chmod a+rx "${ANTSBIN}/${b}" || true
		# If the filename isn't exactly $t, also drop a convenience copy named $t
		[ "$b" != "$t" ] && cp -fv "${ANTSBIN}/${b}" "${ANTSBIN}/${t}" || true
		COPIED=$((COPIED+1))
		continue
	  fi
	
	  # last-chance: search the tree for an executable named $t
	  found="$(find . -type f -name "$t" -perm -111 -print -quit 2>/dev/null || true)"
	  if [ -n "$found" ]; then
		cp -fv "$found" "${ANTSBIN}/"
		chmod a+rx "${ANTSBIN}/$t" || true
		COPIED=$((COPIED+1))
	  fi
	done
	
	# Final sanity
	if [ ! -x "${ANTSBIN}/antsRegistration" ]; then
	  echo "FATAL: ANTs installation failed â€” ${ANTSBIN}/antsRegistration not found." >&2
	  echo "Copied ${COPIED} tools. Present in ${ANTSBIN}:" >&2
	  find "${ANTSBIN}" -maxdepth 1 -type f -printf '%f\n' | sort | head -n 200 >&2 || true
	  exit 1
	fi
	
	chmod -R a+rX "${INSTALL_PREFIX}"

%test
    set -eu
    [ -x "${SAMBA_APPS_DIR:-/opt/samba}/ants/bin/antsRegistration" ]
    echo "ANTs core tools present."

%runscript
    exec /bin/sh -c "$@"
